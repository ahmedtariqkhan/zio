"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[37158],{6534:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>l,frontMatter:()=>d,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"zio-dynamodb/getting-started","title":"Getting Started","description":"Add the dependency to your build.sbt file","source":"@site/docs/zio-dynamodb/getting-started.md","sourceDirName":"zio-dynamodb","slug":"/zio-dynamodb/getting-started","permalink":"/zio-dynamodb/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/zio-dynamodb/getting-started.md","tags":[],"version":"current","frontMatter":{"id":"getting-started","title":"Getting Started"},"sidebar":"ecosystem-sidebar","previous":{"title":"Introduction to ZIO DynamoDB","permalink":"/zio-dynamodb/"},"next":{"title":"Codec Customization","permalink":"/zio-dynamodb/codec-customization"}}');var o=n(74848),a=n(28453);const d={id:"getting-started",title:"Getting Started"},r=void 0,s={},c=[{value:"Add the dependency to your build.sbt file",id:"add-the-dependency-to-your-buildsbt-file",level:2},{value:"Read &amp; write data to/from DynamoDB",id:"read--write-data-tofrom-dynamodb",level:3}];function m(e){const t={code:"code",h2:"h2",h3:"h3",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"add-the-dependency-to-your-buildsbt-file",children:"Add the dependency to your build.sbt file"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-scala",children:'libraryDependencies += "dev.zio" %% "zio-dynamodb" % 0.2.4\n'})}),"\n",(0,o.jsx)(t.h3,{id:"read--write-data-tofrom-dynamodb",children:"Read & write data to/from DynamoDB"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-scala",children:'import zio._\nimport zio.clock.Clock\nimport zio.schema.{ DeriveSchema, Schema }\nimport zio.dynamodb._\nimport zio.dynamodb.DynamoDBQuery._\nimport io.github.vigoo.zioaws.dynamodb\nimport io.github.vigoo.zioaws.dynamodb.DynamoDb\nimport io.github.vigoo.zioaws.core.config\nimport io.github.vigoo.zioaws.http4s\n\nfinal case class Student(email: String, subject: String)\nobject Student {\n  implicit lazy val schema: Schema[Student] = DeriveSchema.gen[Student]\n}\n\nobject Main extends App {\n  private val liveDynamoDbLayer: ZLayer[Any, Throwable, DynamoDb] =\n    http4s.default >>> config.default >>> dynamodb.live\n\n  // Assuming table "student" exists with email as HASH key and subject as the RANGE key\n  val avi = Student("avi@gmail.com", "maths")\n  val adam = Student("adam@gmail.com", "english")\n\n  def run(args: List[String]) = {\n    (for {\n      _ <- (put("student", avi) zip put("student", adam)).execute\n      listOfStudentsOrError <- forEach(List(avi, adam)) { student =>\n        get[Student]("student",\n          PrimaryKey("email" -> student.email, "subject" -> student.subject)\n        )}.execute\n    } yield ())\n      .provideLayer((liveDynamoDbLayer ++ Clock.live) >>> DynamoDBExecutor.live)\n      .exitCode\n  }\n}\n'})})]})}function l(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>r});var i=n(96540);const o={},a=i.createContext(o);function d(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);